name: build-macos-arm64

on:
  push:
    branches: [ "mcicd-test" ]
  pull_request:

jobs:
  build-macos:
    timeout-minutes: 20
    runs-on: ${{ matrix.config.os }}
    
    strategy:
      matrix:
        config:
          - {os: macos-14, pow_version: 0.2.2}
    
    steps:
    - name: Install dependencies
      run: |
        brew install git cmake automake autoconf libtool pkg-config

        # Build static curl library
        CURL_VERSION=$(curl --version | awk '{print $2}' | head -n 1)
        curl -L https://curl.se/download/curl-${CURL_VERSION}.tar.gz | tar xz
        cd curl-${CURL_VERSION}
        mkdir curl_install
        ./configure --disable-shared --enable-static --disable-ldap --without-librtmp --without-libpsl --without-ssl --prefix=$(pwd)/curl_install
        make -j$(sysctl -n hw.logicalcpu)
        make install
        
        echo "Curl build complete. Checking installation:"
        ls -R curl_install
        
        if [ ! -d "curl_install/lib" ]; then
          echo "Error: curl_install/lib directory not found"
          exit 1
        fi
        
        cd ..

        # Build pow library
        curl -sL https://codeload.github.com/bitbi-core/pow/zip/refs/tags/v${{matrix.config.pow_version}} -o pow.zip
        POW_HOME=$HOME/pow
        mkdir -p $POW_HOME
        unzip pow.zip -d $POW_HOME
        cd $POW_HOME/pow-${{matrix.config.pow_version}}
        mkdir build
        cd build
        cmake ..
        make -j$(sysctl -n hw.logicalcpu)
        ls $POW_HOME/pow-${{matrix.config.pow_version}}/build

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true
    
    - name: Build Miner
      run: |
        export ACLOCAL_PATH="$(pwd)/m4:$ACLOCAL_PATH"
        echo $ACLOCAL_PATH
        ./autogen.sh
        ./nomacro.pl
        POW_HOME=$HOME/pow/pow-${{matrix.config.pow_version}}
        CURL_VERSION=$(curl --version | awk '{print $2}' | head -n 1)
        CURL_HOME=$(pwd)/curl-${CURL_VERSION}/curl_install
        
        echo "CURL_HOME: $CURL_HOME"
        ls -R $CURL_HOME
        
        # Use static linking for all libraries
        export LDFLAGS="-L$CURL_HOME/lib -L$POW_HOME/build"
        export CPPFLAGS="-I$CURL_HOME/include -I$POW_HOME/src"
        export PKG_CONFIG_PATH="$CURL_HOME/lib/pkgconfig:$PKG_CONFIG_PATH"
        
        ./configure CPPFLAGS="$CPPFLAGS" LDFLAGS="$LDFLAGS" LIBS="-lrandomx -lcurl -lz" --with-curl="$CURL_HOME"
        
        make -j$(sysctl -n hw.logicalcpu)
        mv ./minerd ./minerd-macos-arm64
        
        # Ensure compatibility with all Apple silicon Macs
        lipo -archs ./minerd-macos-arm64

    - name: Upload config.log
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: config.log
        path: ./config.log
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-${{ matrix.config.os }}
        path: ./minerd-macos-arm64