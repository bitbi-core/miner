name: build-macos

on:
  push:
    branches: [ "mcicd-test" ]
  pull_request:

jobs:
  build-macos:

    timeout-minutes: 15
    runs-on: ${{ matrix.config.os }}

    strategy:
      matrix:
        config:
          - {os: macos-14, pow_version: 0.2.2, arch: x86_64}
          - {os: macos-14, pow_version: 0.2.2, arch: arm64}

    steps:
    - name: Set up build environment
      run: |
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        if [ "${{ matrix.config.arch }}" == "arm64" ]; then
          SDKROOT=$(xcrun -sdk macosx --show-sdk-path)
          MACOSX_DEPLOYMENT_TARGET=11.0
          CFLAGS="-arch arm64 -isysroot $SDKROOT -mmacosx-version-min=$MACOSX_DEPLOYMENT_TARGET"
          CXXFLAGS="-arch arm64 -isysroot $SDKROOT -mmacosx-version-min=$MACOSX_DEPLOYMENT_TARGET"
          LDFLAGS="-arch arm64 -isysroot $SDKROOT -mmacosx-version-min=$MACOSX_DEPLOYMENT_TARGET"
        else
          SDKROOT=$(xcrun -sdk macosx --show-sdk-path)
          MACOSX_DEPLOYMENT_TARGET=10.15
          CFLAGS="-arch x86_64 -isysroot $SDKROOT -mmacosx-version-min=$MACOSX_DEPLOYMENT_TARGET"
          CXXFLAGS="-arch x86_64 -isysroot $SDKROOT -mmacosx-version-min=$MACOSX_DEPLOYMENT_TARGET"
          LDFLAGS="-arch x86_64 -isysroot $SDKROOT -mmacosx-version-min=$MACOSX_DEPLOYMENT_TARGET"
        fi
        echo "SDKROOT=$SDKROOT" >> $GITHUB_ENV
        echo "MACOSX_DEPLOYMENT_TARGET=$MACOSX_DEPLOYMENT_TARGET" >> $GITHUB_ENV
        echo "CFLAGS=$CFLAGS" >> $GITHUB_ENV
        echo "CXXFLAGS=$CXXFLAGS" >> $GITHUB_ENV
        echo "LDFLAGS=$LDFLAGS" >> $GITHUB_ENV
        echo "ARCH=${{ matrix.config.arch }}" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        brew install git cmake automake autoconf libtool pkg-config libpsl openssl@3

    - name: Build pow library
      run: |
        curl -sL https://codeload.github.com/bitbi-core/pow/zip/refs/tags/v${{matrix.config.pow_version}} -o pow.zip
        POW_HOME=$HOME/pow
        mkdir -p $POW_HOME
        unzip pow.zip -d $POW_HOME
        cd $POW_HOME/pow-${{matrix.config.pow_version}}
        mkdir build
        cd build
        if [ "${{ matrix.config.arch }}" == "x86_64" ]; then
          cmake -DCMAKE_OSX_ARCHITECTURES=$ARCH \
            -DCMAKE_SYSTEM_NAME=Darwin \
            -DCMAKE_OSX_SYSROOT=$SDKROOT \
            -DCMAKE_C_FLAGS="$CFLAGS" \
            -DCMAKE_CXX_FLAGS="$CXXFLAGS" \
            -DCMAKE_EXE_LINKER_FLAGS="$LDFLAGS" \
            -DCMAKE_SHARED_LINKER_FLAGS="$LDFLAGS" \
            -DCMAKE_MODULE_LINKER_FLAGS="$LDFLAGS" \
            -DRANDOMX_ENABLE_JIT=OFF \
            -DRANDOMX_ENABLE_ASM=OFF ..
        else
          cmake -DCMAKE_OSX_ARCHITECTURES=$ARCH \
            -DCMAKE_SYSTEM_NAME=Darwin \
            -DCMAKE_OSX_SYSROOT=$SDKROOT \
            -DCMAKE_C_FLAGS="$CFLAGS" \
            -DCMAKE_CXX_FLAGS="$CXXFLAGS" \
            -DCMAKE_EXE_LINKER_FLAGS="$LDFLAGS" \
            -DCMAKE_SHARED_LINKER_FLAGS="$LDFLAGS" \
            -DCMAKE_MODULE_LINKER_FLAGS="$LDFLAGS" ..
        fi
        make -j$(sysctl -n hw.logicalcpu)
        ls $POW_HOME/pow-${{matrix.config.pow_version}}/build

    - name: Build libcurl from source
      run: |
        curl -sL https://curl.se/download/curl-8.6.0.tar.gz -o curl.tar.gz
        tar -xzf curl.tar.gz
        cd curl-8.6.0
        PKG_CONFIG_PATH="/usr/local/opt/openssl@3/lib/pkgconfig" ./configure \
          --with-openssl=/usr/local/opt/openssl@3 \
          --with-libpsl \
          --disable-shared \
          --enable-static \
          --disable-ldap \
          --disable-sspi \
          --without-librtmp \
          --disable-ftp \
          --disable-file \
          --disable-dict \
          --disable-telnet \
          --disable-tftp \
          --disable-rtsp \
          --disable-pop3 \
          --disable-imap \
          --disable-smtp \
          --disable-gopher \
          --disable-smb \
          --without-libidn \
          --disable-proxy \
          --host=${{ matrix.config.arch }}-apple-darwin \
          CFLAGS="$CFLAGS" \
          CXXFLAGS="$CXXFLAGS" \
          LDFLAGS="$LDFLAGS -L/usr/local/opt/openssl@3/lib -L/usr/local/opt/libpsl/lib" \
          CPPFLAGS="-I/usr/local/opt/openssl@3/include -I/usr/local/opt/libpsl/include"
        make -j$(sysctl -n hw.logicalcpu)
        sudo make install
        cd ..

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build Miner
      run: |
        export ACLOCAL_PATH="$(pwd)/m4:$ACLOCAL_PATH"
        echo $ACLOCAL_PATH
        ./autogen.sh
        ./nomacro.pl
        POW_HOME=$HOME/pow/pow-${{matrix.config.pow_version}}
        ls $POW_HOME
        ls $POW_HOME/build
        PKG_CONFIG_PATH="/usr/local/opt/openssl@3/lib/pkgconfig:/usr/local/opt/libpsl/lib/pkgconfig" \
        ./configure CPPFLAGS="-I$POW_HOME/src -I/usr/local/include -I/usr/local/opt/openssl@3/include -I/usr/local/opt/libpsl/include $CFLAGS" \
          LDFLAGS="$LDFLAGS -L/usr/local/lib -L/usr/local/opt/openssl@3/lib -L/usr/local/opt/libpsl/lib" \
          LIBS="-L$POW_HOME/build -lrandomx -lcurl -lssl -lcrypto -lpsl" \
          --host=${{ matrix.config.arch }}-apple-darwin
        make -j$(sysctl -n hw.logicalcpu)

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-${{ matrix.config.os }}-${{ matrix.config.arch }}
        path: ./minerd